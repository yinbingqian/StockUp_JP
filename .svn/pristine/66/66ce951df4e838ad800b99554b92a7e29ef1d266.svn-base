package com.sxit.activity.login;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import org.ksoap2.serialization.SoapObject;

import android.app.Activity;
import android.content.Intent;
import android.os.AsyncTask;
import android.os.Bundle;
import android.os.Parcelable;
import android.support.v4.view.PagerAdapter;
import android.support.v4.view.ViewPager;
import android.support.v4.view.ViewPager.OnPageChangeListener;
import android.view.LayoutInflater;
import android.view.View;
import android.widget.AutoCompleteTextView;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;

import cn.jpush.android.api.JPushInterface;

import com.sxit.activity.adviser.th.AMainTabHostActivity;
import com.sxit.activity.base.BaseActivity;
import com.sxit.activity.register.EditPassword_Activity;
import com.sxit.activity.register.Register_Activity;
import com.sxit.activity.th.MainTabHostActivity;
import com.sxit.db.DBHelper;
import com.sxit.entity.LoginUser;
import com.sxit.http.SoapRes;
import com.sxit.http.SoapWebService;
import com.sxit.utils.SOAP_UTILS;
import com.sxit.utils.Utils;
import lnpdit.lntv.tradingtime.R;

public class Login_Activity extends BaseActivity {
	private ViewPager login_vp;
	private TextView tv_title;
	private List<View> listViews;
	private Button bt_change_login_status, login_btn, a_login_btn;
	private ImageView img_back;
	private AutoCompleteTextView actv_username, actv_password, actv_analyst_username, actv_analyst_password;
	private TextView tv_register, tv_password, tv_password_adv;
	private View view1, view2;
	private Object NULL = null;
	private DBHelper dbh;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		this.setContentView(R.layout.activity_login);
		isParentActivity = false;
		dbh = new DBHelper(this);
		bt_change_login_status = (Button) findViewById(R.id.bt_change_login_status);
		tv_title = (TextView) findViewById(R.id.tv_title);
		tv_title.setText(Login_Activity.this.getResources().getString(R.string.register_customer));
		bt_change_login_status.setOnClickListener(this);
		login_vp = (ViewPager) findViewById(R.id.login_vp);
		img_back = (ImageView) findViewById(R.id.img_back);
		InitViewPager();
		img_back.setOnClickListener(this);
	}

	@Override
	public void onClick(View v) {
		switch (v.getId()) {
		/**
		 * 
		 * <string name="register_analyst">顾问登录</string> <string name="register_customer">投资者登录</string>
		 */

		case R.id.bt_change_login_status:
			String bt_change_login_status_str = bt_change_login_status.getText().toString().trim();
			if (bt_change_login_status_str.equals(this.getResources().getString(R.string.register_analyst_c))) {
				login_vp.setCurrentItem(1);
				bt_change_login_status.setText(this.getResources().getString(R.string.register_customer_c));
			} else {
				bt_change_login_status.setText(this.getResources().getString(R.string.register_analyst_c));
				login_vp.setCurrentItem(0);
			}
			break;
		case R.id.img_back:
			finish();
			break;
		case R.id.login_btn:
			login_validate(actv_username.getText().toString().trim(), actv_password.getText().toString().trim());
			break;
		case R.id.a_login_btn:
			a_login_validate(actv_analyst_username.getText().toString().trim(), actv_analyst_password.getText().toString().trim());
			break;
		case R.id.tv_register:
			intent.setClass(Login_Activity.this, Register_Activity.class);
			startActivity(intent);
			break;
		case R.id.tv_password:
			intent.setClass(Login_Activity.this, EditPassword_Activity.class);
			startActivity(intent);
			break;
		case R.id.tv_password_adv:
			intent.setClass(Login_Activity.this, EditPassword_Activity.class);
			startActivity(intent);
			break;
		default:
			break;
		}
		super.onClick(v);
	}

	private void InitViewPager() {
		listViews = new ArrayList<View>();
		LayoutInflater mInflater = getLayoutInflater();
		view1 = mInflater.inflate(R.layout.activity_login_ctm, null);
		view2 = mInflater.inflate(R.layout.activity_login_adv, null);
		listViews.add(view1);
		listViews.add(view2);
		login_btn = (Button) view1.findViewById(R.id.login_btn);
		actv_username = (AutoCompleteTextView) view1.findViewById(R.id.actv_username);
		actv_password = (AutoCompleteTextView) view1.findViewById(R.id.actv_password);
		tv_register = (TextView) view1.findViewById(R.id.tv_register);
		tv_password = (TextView) view1.findViewById(R.id.tv_password);
		a_login_btn = (Button) view2.findViewById(R.id.a_login_btn);
		actv_analyst_username = (AutoCompleteTextView) view2.findViewById(R.id.actv_analyst_username);
		actv_analyst_password = (AutoCompleteTextView) view2.findViewById(R.id.actv_analyst_password);
		tv_password_adv = (TextView) view2.findViewById(R.id.tv_password_adv);
		login_vp.setAdapter(new MyPagerAdapter(listViews));
		login_vp.setCurrentItem(0);
		login_vp.setOnPageChangeListener(new MyOnPageChangeListener());
		login_btn.setOnClickListener(this);
		a_login_btn.setOnClickListener(this);
		tv_register.setOnClickListener(this);
		tv_password.setOnClickListener(this);
		tv_password_adv.setOnClickListener(this);
	}

	/**
	 * ViewPager适配器
	 */
	public class MyPagerAdapter extends PagerAdapter {
		public List<View> mListViews;

		public MyPagerAdapter(List<View> mListViews) {
			this.mListViews = mListViews;
		}

		@Override
		public void destroyItem(View arg0, int arg1, Object arg2) {
			((ViewPager) arg0).removeView(mListViews.get(arg1));
		}

		@Override
		public void finishUpdate(View arg0) {
		}

		@Override
		public int getCount() {
			return mListViews.size();
		}

		@Override
		public Object instantiateItem(View arg0, int arg1) {
			((ViewPager) arg0).addView(mListViews.get(arg1), 0);
			return mListViews.get(arg1);
		}

		@Override
		public boolean isViewFromObject(View arg0, Object arg1) {
			return arg0 == (arg1);
		}

		@Override
		public void restoreState(Parcelable arg0, ClassLoader arg1) {
		}

		@Override
		public Parcelable saveState() {
			return null;
		}

		@Override
		public void startUpdate(View arg0) {
		}
	}

	/**
	 * 页卡切换监听
	 */
	public class MyOnPageChangeListener implements OnPageChangeListener {

		// int one = offset * 2 + bmpW;// 页卡1 -> 页卡2 偏移量
		// int two = one * 2;// 页卡1 -> 页卡3 偏移量

		@Override
		public void onPageSelected(int arg0) {
			switch (arg0) {
			case 0:
				bt_change_login_status.setText(Login_Activity.this.getResources().getString(R.string.register_analyst_c));
				tv_title.setText(Login_Activity.this.getResources().getString(R.string.register_customer));
				break;
			case 1:
				bt_change_login_status.setText(Login_Activity.this.getResources().getString(R.string.register_customer_c));
				tv_title.setText(Login_Activity.this.getResources().getString(R.string.register_analyst));
				break;
			default:
				break;
			}
		}

		@Override
		public void onPageScrolled(int arg0, float arg1, int arg2) {
		}

		@Override
		public void onPageScrollStateChanged(int arg0) {
		}
	}

	/**
	 * 用户登录
	 * 
	 * @param username
	 * @param password
	 */
	private void login_validate(String username, String password) {
		if (username == null || username.equals("")) {
			Toast.makeText(this, getString(R.string.admin_empty), Toast.LENGTH_SHORT).show();
		} else if (password == null || password.equals("")) {
			Toast.makeText(this, getString(R.string.password_empty), Toast.LENGTH_SHORT).show();
		} else {
			Object[] property_va = { username, password, Utils.getImei(this) };
			soapService.userInfoLogin(property_va);
		}
	}

	/**
	 * 顾问登录
	 * 
	 * @param username
	 * @param password
	 */
	private void a_login_validate(String username, String password) {
		if (username == null || username.equals("")) {
			Toast.makeText(this, getString(R.string.admin_empty), Toast.LENGTH_SHORT).show();
		} else if (password == null || password.equals("")) {
			Toast.makeText(this, getString(R.string.password_empty), Toast.LENGTH_SHORT).show();
		} else {
			Object[] property_va = { username, password };
			soapService.adminLogin(property_va);
		}
	}

	Set<String> set = new HashSet<String>();

	public void onEvent(SoapRes res) {
		if (res.getCode().equals(SOAP_UTILS.METHOD.USERINFOLOGIN)) {
			LoginUser loginUser = (LoginUser) res.getObj();
			if (loginUser != null) {
				if (loginUser.getUserid().equals("0")) {
					Utils.showTextToast(this, getString(R.string.userlogin_fail));
				} else {
					Utils.showTextToast(this, "用户登录id	" + loginUser.getUserid());
					loginUser.setLoginType(SOAP_UTILS.USER);
					loginUser.setPassword(actv_password.getText().toString().trim());
					dbh.insLoginUserInfo(loginUser);
					dbh.queryLoginUserInfo();
					setLoginUser(loginUser);
					set.add("TradingDemo");// 用户
					JPushInterface.setAliasAndTags(this, loginUser.getName(), set);
					if (!(dbh.queryGzAdminMsg(getLoginUser().getUserid()) < 0)) {
						dbh.initMsgData(getLoginUser().getUserid(), getResources().getString(R.string.app_welcome_text));
					}

					intent.setClass(this, MainTabHostActivity.class);
					startActivity(intent);
					finish();
				}
			} else {
				Utils.showTextToast(this, getString(R.string.userlogin_fail));
			}
		} else if (res.getCode().equals(SOAP_UTILS.METHOD.ADMINLOGIN)) {
			LoginUser loginUser = (LoginUser) res.getObj();
			if (loginUser != null) {
				if (loginUser.getUserid().equals("0")) {
					Utils.showTextToast(this, getString(R.string.advlogin_fail));
				} else {
					Utils.showTextToast(this, "顾问登录id	" + loginUser.getUserid());
					loginUser.setLoginType(SOAP_UTILS.ADMIN);
					loginUser.setPassword(actv_analyst_password.getText().toString().trim());
					dbh.insLoginUserInfo(loginUser);
					dbh.queryLoginUserInfo();
					setLoginUser(loginUser);
					set.add("TradingAnalyst");// 分析师
					JPushInterface.setAliasAndTags(this, "Analyst" + loginUser.getName(), set);
					intent.setClass(this, AMainTabHostActivity.class);
					startActivity(intent);
					finish();
				}
			} else {
				Utils.showTextToast(this, getString(R.string.advlogin_fail));
			}
		}
	}

	// @Override
	// public void onEventMainThread(String method) {
	// if(method.equals(SOAP_UTILS.METHOD.USERINFOLOGIN)){
	// Utils.showTextToast(this,"fial---------------------");
	// Object[] property_va = { "2", "2", Utils.getImei(this) };
	// soapService.userInfoLogin(property_va);
	// }
	// }

//	class InitMsgAT extends AsyncTask<Object, Object, Object> {
//
//		@Override
//		protected Object doInBackground(Object... params) {
//			dbh.initAMsgData(getLoginUser().getUserid(), getResources().getString(R.string.app_welcome_text));
//			return null;
//		}
//
//	}
	
	
}
