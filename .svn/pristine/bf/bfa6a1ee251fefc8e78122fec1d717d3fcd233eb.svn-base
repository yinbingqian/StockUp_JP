package com.sxit.activity.adviser.chatmsg.adapter;

import java.util.List;

import com.sxit.activity.wap.Wap_Activity;
import com.sxit.entity.ChatMessage;
import com.sxit.entity.LoginUser;
import com.sxit.entity.UserInfo;
import com.sxit.instance.Instance;
import com.sxit.utils.SOAP_UTILS;

import lnpdit.lntv.tradingtime.R;

import android.content.Context;
import android.content.Intent;
import android.text.SpannableString;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;

public class ChattingAdapter extends BaseAdapter {
	private Context context;
	private List<ChatMessage> chatMessages;

	private LoginUser loginUser;
	public ChattingAdapter(Context context, List<ChatMessage> messages,LoginUser loginUser) {
		super();
		this.context = context;
		this.chatMessages = messages;
		this.loginUser = loginUser;

	}

	public int getCount() {
		return chatMessages.size();
	}

	public Object getItem(int position) {
		return chatMessages.get(position);
	}

	public long getItemId(int position) {
		return position;
	}

	public View getView(final int position, View convertView, ViewGroup parent) {
		ViewHolder holder = null;
		final ChatMessage message = chatMessages.get(position);
		if (convertView == null || (holder = (ViewHolder) convertView.getTag()).direction != message.getMsg_direction()) {
			holder = new ViewHolder();

			if (message.getMsg_direction() == ChatMessage.MESSAGE_O) {
				holder.direction = ChatMessage.MESSAGE_O;
				convertView = LayoutInflater.from(context).inflate(R.layout.chat_list_item_left, null);
			} else {
				holder.direction = ChatMessage.MESSAGE_T;
				convertView = LayoutInflater.from(context).inflate(R.layout.chat_list_item_right, null);
			}
			holder.tvTip = (TextView) convertView.findViewById(R.id.chat_msg_list_item_tip_tv);
			holder.tvSendTime = (TextView) convertView.findViewById(R.id.chat_msg_list_item_sendtime_tv);
			holder.tvContent = (TextView) convertView.findViewById(R.id.chat_msg_list_item_content_tv);
			holder.lyVoice = (LinearLayout) convertView.findViewById(R.id.chat_msg_list_item_content_ly);
			holder.lyNews = (LinearLayout) convertView.findViewById(R.id.chat_msg_list_item_content_xw);
			holder.ivHeader = (ImageView) convertView.findViewById(R.id.chat_msg_list_item_header_iv);
			holder.xwtvTitle = (TextView) convertView.findViewById(R.id.chat_msg_list_item_content_xw_title);
			holder.xwtvContent = (TextView) convertView.findViewById(R.id.chat_msg_list_item_content_xw_content);
			holder.xwivImg = (ImageView) convertView.findViewById(R.id.chat_msg_list_item_content_xw_img);
			holder.message = message;
			convertView.setTag(holder);
			holder.lyNews.setOnClickListener(new OnClickListener() {
				
				@Override
				public void onClick(View v) {
				System.out.println("Click News");
				Intent intent = new Intent();
				intent.setClass(context, Wap_Activity.class);
				intent.putExtra("wap_url", message.getContent3_url());
				intent.putExtra("wap_name", "股涨咨询");
				context.startActivity(intent);
				}
			});
		} else {
			holder = (ViewHolder) convertView.getTag();
		}
		holder.tvSendTime.setText(message.getMsg_send_date());

		if (message.getMsg_type() == 0) {
			holder.lyVoice.setVisibility(View.GONE);
			holder.tvContent.setVisibility(View.VISIBLE);
			holder.lyNews.setVisibility(View.GONE);
			// SpannableString spannableString = FaceConversionUtil.getInstace().getExpressionString(context, message.getContent());
			// holder.tvContent.setText(spannableString);
			holder.tvContent.setText(message.getContent1());

		} else if (message.getMsg_type() == 1) {
			if (message.getContent2() == null) {
				System.out.println(">>>> getByteContent");
			} else {
				holder.lyVoice.setVisibility(View.VISIBLE);
				holder.tvContent.setVisibility(View.GONE);
				holder.lyNews.setVisibility(View.GONE);
				holder.tvContent.setText("语音：" + message.getContent2().length + "");
				holder.lyVoice.setOnClickListener(new OnClickListener() {
					@Override
					public void onClick(View v) {
						// AudioWrapper.DoSinglePlayer(message.getContent2());
					}
				});
			}

		} else {
			holder.lyVoice.setVisibility(View.GONE);
			holder.lyNews.setVisibility(View.VISIBLE);
			holder.tvContent.setVisibility(View.GONE);
			holder.xwtvTitle.setText(message.getContent3_title());
			holder.xwtvContent.setText(message.getContent3_content());
			Instance.imageLoader.displayImage(message.getContent3_img(), holder.xwivImg, Instance.new_s_options);
		}
		System.out.println(">>>>"+message.getUserinfo().getUserheader());
		
		if (message.getMsg_direction() == ChatMessage.MESSAGE_O) {
			Instance.imageLoader.displayImage(SOAP_UTILS.HEADER_URL+message.getUserinfo().getUserheader(), holder.ivHeader, Instance.user_options);
			holder.tvTip.setVisibility(View.GONE);
		} else {
			Instance.imageLoader.displayImage(SOAP_UTILS.HEADER_URL+loginUser.getHeadpic(), holder.ivHeader, Instance.user_options);
		}
		
		// Instance.imageLoader.displayImage(Configs.BASE_URL
		// + message.getUserInfo()..replace('\\', '/'),
		// holder.ivHeader, Instance.options);
		// holder.ivHeader.setBackgroundResource(R.drawable.driving_mode_group_header_icon4);
		return convertView;
	}

	static class ViewHolder {
		public TextView tvSendTime;
		public TextView tvContent;
		public ImageView ivHeader;
		public LinearLayout lyVoice;
		public LinearLayout lyNews;
		public TextView xwtvTitle;
		public TextView xwtvContent;
		public TextView tvTip;
		public ImageView xwivImg;
		public int direction;
		public ChatMessage message;
	}

}
