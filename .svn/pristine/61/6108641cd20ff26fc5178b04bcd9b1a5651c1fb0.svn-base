package com.sxit.activity.th.item;

import java.util.List;

import lnpdit.lntv.tradingtime.R;
import android.os.AsyncTask;
import android.os.Bundle;
import android.view.View;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.TextView;

import com.handmark.pulltorefresh.library.PullToRefreshBase;
import com.handmark.pulltorefresh.library.PullToRefreshBase.OnLastItemVisibleListener;
import com.handmark.pulltorefresh.library.PullToRefreshBase.OnRefreshListener;
import com.handmark.pulltorefresh.library.PullToRefreshListView;
import com.sxit.activity.askingquest.AnswerQuestionInfo_Activity;
import com.sxit.activity.askingquest.AnswerQuestion_Activity;
import com.sxit.activity.askingquest.AskingQuestionInfo_Activity;
import com.sxit.activity.askingquest.OpAnswerTimeActivity;
import com.sxit.activity.base.BaseActivity;
import com.sxit.activity.th.item.adapter.AskQuestion_Adapter;
import com.sxit.activity.th.item.bean.AskQuestion_ListBean;
import com.sxit.http.SoapRes;
import com.sxit.utils.SOAP_UTILS;

/**
 * 提问
 * 
 * @author huanyu 类名称：AskQuestion_Activity 创建时间:2014-11-12 下午1:22:16
 */
public class AskQuestion_Activity extends BaseActivity {
	private TextView tv_asking;// 提问
	private LinearLayout icl_noask, icl_listView;
	private Button bt_askQuestion;
	private int curUI;// 0：提问 1：answer
	/** ListView **/
	private PullToRefreshListView listView_askquestion;
	private ListView listView;
	private AskQuestion_Adapter adapter;
	private List<AskQuestion_ListBean> list;
	private int pageIndex = 1;
	private int onClickPosition;// 点击位置

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		setContentView(R.layout.activity_askquestion);
		super.onCreate(savedInstanceState);
		initView();
		setListeners();
	}

	private void initView() {
		icl_noask = (LinearLayout) findViewById(R.id.icl_noask);
		icl_listView = (LinearLayout) findViewById(R.id.icl_listView);
		bt_askQuestion = (Button) findViewById(R.id.bt_askQuestion);
		listView_askquestion = (PullToRefreshListView) findViewById(R.id.listView_askquestion);
		listView = listView_askquestion.getRefreshableView();
		tv_asking = (TextView) findViewById(R.id.tv_asking);
	}

	private void setListeners() {
		bt_askQuestion.setOnClickListener(this);
		tv_asking.setOnClickListener(this);
		icl_noask.setOnClickListener(null);
		listView.setOnItemClickListener(new OnItemClickListener() {

			@Override
			public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
				onClickPosition = position - 1;
				if (list.get(position - 1).getStatus().equals("0")) {
					intent.setClass(AskQuestion_Activity.this, AnswerQuestion_Activity.class);
					Bundle bundle = new Bundle();
					bundle.putSerializable("AskQuestion_ListBean", list.get(position - 1));
					intent.putExtras(bundle);
					startActivity(intent);
				} else {
					intent.setClass(AskQuestion_Activity.this, AnswerQuestionInfo_Activity.class);
					intent.putExtra("anwser", list.get(position - 1).getBestAnswer());
					intent.putExtra("isCheck", true);
					startActivity(intent);
				}
			}
		});
		listView_askquestion.setOnRefreshListener(new OnRefreshListener<ListView>() {

			@Override
			public void onRefresh(PullToRefreshBase<ListView> refreshView) {
				new GetDataTask().execute();
			}
		});
		// end of list
		listView_askquestion.setOnLastItemVisibleListener(new OnLastItemVisibleListener() {

			@Override
			public void onLastItemVisible() {
				String[] property_va = new String[] { "10", ++pageIndex + "", getLoginUser().getUserid() };
				soapService.getCommunicationALL(property_va, true);
			}
		});
	}

	/**
	 * 列表刷新
	 * 
	 * @author why
	 * 
	 */
	private class GetDataTask extends AsyncTask<Void, Void, String> {

		@Override
		protected String doInBackground(Void... params) {
			try {
				Thread.sleep(1500);
			} catch (InterruptedException e) {
			}
			return "";
		}

		@Override
		protected void onPostExecute(String result) {
			pageIndex = 1;
			String[] property_va = new String[] { "10", pageIndex + "", getLoginUser().getUserid() };
			soapService.getCommunicationALL(property_va, false);
			super.onPostExecute(result);
		}
	}

	@Override
	public void onClick(View v) {
		super.onClick(v);
		switch (v.getId()) {
		case R.id.bt_askQuestion:
			intent.setClass(AskQuestion_Activity.this, AskingQuestionInfo_Activity.class);
			startActivity(intent);
			break;
		case R.id.tv_asking:
			intent.setClass(AskQuestion_Activity.this, AskingQuestionInfo_Activity.class);
			startActivity(intent);
			break;
		default:
			break;
		}
	}

	/**
	 * 切换UI状态
	 */
	private void changLoginState() {
		switch (curUI) {
		case 0:
			icl_listView.setVisibility(View.GONE);
			icl_noask.setVisibility(View.VISIBLE);
			break;
		case 1:
			icl_listView.setVisibility(View.VISIBLE);
			icl_noask.setVisibility(View.GONE);
			break;
		default:
			break;
		}
	}

	@Override
	protected void onResume() {
		if (curUI == 0) {
			String[] property_va = new String[] { "10", pageIndex + "", getLoginUser().getUserid() };
			soapService.getCommunicationALL(property_va, false);
		}
		super.onResume();
	}

	@Override
	protected void onPause() {
		super.onPause();
	}

	@Override
	protected void onDestroy() {
		super.onDestroy();
	}
	
	
	public void onEvent(SoapRes obj) {
		super.onEvent(obj);
		if (obj.getCode().equals(SOAP_UTILS.METHOD.GETCOMMUNICATIONALL)) {
			if (obj.isPage()) {
				for (AskQuestion_ListBean bean : (List<AskQuestion_ListBean>) obj.getObj()) {
					list.add(bean);
				}
				adapter.notifyDataSetChanged();
			} else {
				list = (List<AskQuestion_ListBean>) obj.getObj();
				if (list.size() != 0) {
					adapter = new AskQuestion_Adapter(this, list);
					listView.setAdapter(adapter);
					curUI = 1;
					changLoginState();
				}
			}
			listView_askquestion.onRefreshComplete();
		}
	}

	@Override
	public void onEventMainThread(String method) {
		if (method.equals(SOAP_UTILS.METHOD.GETCOMMUNICATIONALL)) {
			String[] property_va = new String[] { "10", pageIndex + "", getLoginUser().getUserid() };
			soapService.getCommunicationALL(property_va, false);
		}
	}

	/**
	 * 接受解答返回已回答问题id，用于查询问题详情
	 * 
	 * @param anwserId
	 */
	public void onEvent(String... answer) {
		if (answer[0].equals(AnswerQuestion_Activity.class.getName())) {//解答返回
			if (answer != null) {
				list.get(onClickPosition).setBestAnswer(answer[1]);
				list.get(onClickPosition).setStatus("1");
				adapter.notifyDataSetChanged();
			}
		}
		if (answer[0].equals(AnswerQuestionInfo_Activity.class.getName())) {//解答详情返回返回
			if (answer != null) {
				list.get(onClickPosition).setBestAnswer(answer[1]);
				list.get(onClickPosition).setStatus("1");
				adapter.notifyDataSetChanged();
			}
		}
		if(answer[0].equals(AskingQuestionInfo_Activity.class.getName())){
			pageIndex = 1;
			String[] property_va = new String[] { "10", pageIndex + "", getLoginUser().getUserid() };
			soapService.getCommunicationALL(property_va, false);
		}
	}
}
