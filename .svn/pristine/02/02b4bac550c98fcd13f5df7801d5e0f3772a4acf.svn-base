package com.sxit.utils;

import java.io.InputStream;
import java.text.SimpleDateFormat;

import net.sourceforge.pinyin4j.PinyinHelper;
import net.sourceforge.pinyin4j.format.HanyuPinyinCaseType;
import net.sourceforge.pinyin4j.format.HanyuPinyinOutputFormat;
import net.sourceforge.pinyin4j.format.HanyuPinyinToneType;
import net.sourceforge.pinyin4j.format.exception.BadHanyuPinyinOutputFormatCombination;

import org.json.JSONObject;

import android.content.Context;
import android.telephony.TelephonyManager;
import android.widget.Toast;

/**
 * 工具类
 * 
 * @author huanyu 类名称：Utils 创建时间:2014-10-26 下午11:15:47
 */
public class Utils {
	public static Toast toast;

	/**
	 * 消除Toast显示重复
	 * 
	 * @param context
	 * @param msg
	 *            提示语
	 */
	public static void showTextToast(Context context, String msg) {
		if (toast == null) {
			toast = Toast.makeText(context.getApplicationContext(), msg, Toast.LENGTH_LONG);
		} else {
			toast.setText(msg);
		}
		toast.show();
	}

	public static String getImei(Context context) {
		TelephonyManager telephonyManager = (TelephonyManager) context.getSystemService(Context.TELEPHONY_SERVICE);
		return telephonyManager.getDeviceId();
	}

	public static String getSystemDate() {
		SimpleDateFormat dateformat1 = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
		String a1 = dateformat1.format(new java.util.Date());
		return a1;
	}
	/**
	 * 获取汉子首字母
	 * @param chines
	 * @return
	 */
	public static String converterToFirstSpell(String chines) {
		String pinyinName = "";
		char[] nameChar = chines.toCharArray();
		HanyuPinyinOutputFormat defaultFormat = new HanyuPinyinOutputFormat();
		defaultFormat.setCaseType(HanyuPinyinCaseType.LOWERCASE);
		defaultFormat.setToneType(HanyuPinyinToneType.WITHOUT_TONE);
		for (int i = 0; i < nameChar.length; i++) {
			if (nameChar[i] > 128) {
				try {
					pinyinName += PinyinHelper.toHanyuPinyinStringArray(nameChar[i], defaultFormat)[0].charAt(0);
				} catch (BadHanyuPinyinOutputFormatCombination e) {
					e.printStackTrace();
				}
			} else {
				pinyinName += nameChar[i];
			}
		}
		return pinyinName;
	}

	/**
	 * raw下文件读取
	 * 
	 * @param context
	 * @param res
	 * @return
	 */
	public static JSONObject getObject(Context context, int res) {
		try {
			InputStream is = context.getResources().openRawResource(res);
			byte[] buffer = new byte[is.available()];
			is.read(buffer);
			String json = new String(buffer, "UTF-8");
			// 将字符串json转换为json对象，以便于取出数据
			JSONObject jsonObject = new JSONObject(json);
			return jsonObject;
		} catch (Exception e) {
			return null;
		}
	}
}
